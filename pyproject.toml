[project]
name = "tooluse"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "raoul grouls", email = "Raoul.Grouls@han.nl" }
]
requires-python = ">=3.11"
dependencies = [
    "anthropic>=0.42.0",
    "loguru>=0.7.3",
    "ollama>=0.4.5",
    "python-dotenv>=1.0.1",
]

[project.scripts]
tooluse = "tooluse:main"

[project.optional-dependencies]
demo = [
    "sqlalchemy>=2.0.38",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-cov>=6.0.0",
    "pytest>=8.3.4",
    "jupyter>=1.1.1",
    "ruff>=0.9.9",
    "isort>=6.0.1",
    "pyright>=1.1.395",
]

[tool.pytest.ini_options]
addopts = "-ra -q --log-cli-level=WARNING --cov=tooluse --cov-report=term-missing -k 'not integration'"
testpaths = ["tests"]
markers = [
	"integration: mark a test as an integration test",
]

[tool.coverage.run]
source = ["tooluse"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "\\.\\.\\.",
]
show_missing = true
skip_empty = true

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "N", "C4", "DTZ", "PT"]
